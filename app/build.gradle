apply plugin: 'com.android.application'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
apply plugin: 'com.google.protobuf'

android {
    signingConfigs {
        release {
            keyAlias 'Alias'
            keyPassword 'Wy123456'
            storeFile file('/Users/jx_wy/workdir/WorkSpace/GitProject/gp.keystore')
            storePassword 'Wy123456'
        }
    }
    compileSdkVersion 28
    defaultConfig {
        multiDexEnabled true
        applicationId "com.project.git.com.gitproject"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 10
        versionName "2.0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            signingConfig signingConfigs.release
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    sourceSets.main {
        jniLibs.srcDirs = ['libs']
    }

    protobuf {

        protoc {
            artifact = 'com.google.protobuf:protoc:3.0.0'
        }

        plugins {
            javalite {
                // The codegen for lite comes as a separate artifact
                artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
            }
        }

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    // In most cases you don't need the full Java output
                    // if you use the lite output.
                    remove java
                }
                task.plugins {
                    javalite {}
                }
            }
        }
    }
}

// required
allprojects {
    repositories {
        jcenter()
        maven { url 'http://jitpack.io' }
    }
}

dependencies {
    // 沉浸
    implementation fileTree(includes: ['*.jar'], dir: 'libs')
    implementation 'com.github.crossoverone:StatusBarUtil:1.3.3'
    //    rxjava
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.1'
    //okhttp3
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    //IJK
    // required, enough for most devices.
    implementation 'tv.danmaku.ijk.media:ijkplayer-java:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.8.8'
    // Other ABIs: optional
    implementation 'tv.danmaku.ijk.media:ijkplayer-armv5:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-arm64:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86:0.8.8'
    implementation 'tv.danmaku.ijk.media:ijkplayer-x86_64:0.8.8'
    // ExoPlayer as IMediaPlayer: optional, experimental
    implementation 'tv.danmaku.ijk.media:ijkplayer-exo:0.8.8'
    implementation 'maven_wy:utilproject:1.0.11'
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.2.0
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
    implementation 'com.android.support:multidex:1.0.1'
    // 多dex配置
    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0

    //画廊效果  三方
    implementation 'github.hellocsl:GalleryLayoutManager:1.0.6'
    //图片框架
    implementation 'com.github.bumptech.glide:glide:3.5.2'
    implementation 'com.android.support:support-v4:28.0.0'
    //cardview
    implementation 'com.android.support:cardview-v7:25.3.0'

    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'

    implementation 'com.google.protobuf:protobuf-lite:3.0.0'

    implementation 'skin.support:skin-support:3.1.1'                   // skin-support 基础控件支持
    implementation 'skin.support:skin-support-design:3.1.1'            // skin-support-design material design 控件支持[可选]
    implementation 'skin.support:skin-support-cardview:3.1.1'          // skin-support-cardview CardView 控件支持[可选]
    implementation 'skin.support:skin-support-constraint-layout:3.1.1' // skin-support-constraint-layout ConstraintLayout 控件支持[可选]

    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    implementation 'com.tencent:mmkv:1.0.23'
    implementation (name: 'alipaySdk-15.6.4-20190624155522', ext: 'aar')
}
